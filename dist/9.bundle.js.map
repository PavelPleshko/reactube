{"version":3,"file":"9.bundle.js","sources":["webpack:///./src/pages/WatchLater.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport * as mediaOperations from '../store/states/media/media.operations';\r\nimport * as userOperations from '../store/states/user/user.operations';\r\nimport {selectMedias,selectCurrentPage,\r\n\tselectIsProcessing,noMoreItems,selectPageSize,selectTotal} from '../store/states/media/media.selectors';\r\nimport * as userSelectors from '../store/states/user/user.selectors';\r\n\r\n\r\n//meterial ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n\r\nimport MediaTileHorizontal from '../components/core/MediaTileHorizontal/MediaTileHorizontal';\r\nimport SearchForm from './watchlater/SearchForm';\r\nimport InfiniteScroll from '../components/UI/miscellaneous/InfiniteScroll/InfiniteScroll';\r\n\r\n\r\nconst styles = theme =>({\r\n\tsearch:{\r\n\t\tbackgroundColor:'rgba(0,0,0,.04)',\r\n\t\theight:'100%',\r\n\t\twidth:'100%',\r\n\t\tposition:'fixed',\r\n\t\ttop:0,\r\n\t\tright:0,\r\n\t},\r\n\ttotal:{\r\n\t\tcolor:theme.palette.primary.grey,\r\n\t\tfontSize:'.8rem',\r\n\t\tmargin:'0 .5rem',\r\n\t\tfontWeight:400\r\n\t}\r\n})\r\n\r\n\r\nclass WatchLater extends Component{\r\n\tstate={\r\n\t\tsearched:null\r\n\t}\r\n\r\n\tcomponentDidMount = () =>{\r\n\t\tif(this.props.loggedIn){\r\n\t\t\tlet {currentPage,pageSize,watchlaterMedias,listWatchlaterMedia} = this.props;\r\n\t\t \tif(watchlaterMedias.length < 1) listWatchlaterMedia(currentPage,pageSize);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tlistWatchlaterMedia = () =>{\r\n\t\tconst {currentPage,pageSize,searchWatchlater,listWatchlaterMedia} = this.props;\r\n\t\tconst {searched} = this.state;\r\n\t\tif(searched){\r\n\t\t\tsearchWatchlater(currentPage,pageSize);\r\n\t\t}else{\r\n\t\t\tlistWatchlaterMedia(currentPage,pageSize);\r\n\t\t}\r\n\t}\r\n\r\n\t setRootRef = (element) => {\r\n\t    this.rootRef = element;\r\n\t }\r\n\r\n\t changeSearched = (searched) =>{\r\n\t \tthis.setState({searched});\r\n\t }\r\n\r\n\trender(){\r\n\t\tconst {classes,watchlaterMedias,loggedIn,\r\n\t\t\tisProcessing,noMoreItems,itemsRequested,total} = this.props;\r\n\treturn (\r\n\t\t<Grid container spacing={24}>\r\n\t\t\t<Grid item sm={12}>\r\n\t\t\t\t<h3>My watchlist\r\n\t\t\t\t\t{loggedIn && <span className={classes.total}>\r\n\t\t\t\t\t\t(<strong>{total}</strong> in total)\r\n\t\t\t\t\t</span>}\r\n\t\t\t\t</h3>\r\n\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item sm={7}>\r\n\t\t\t\t<div ref={this.setRootRef}>\r\n\t\t\t\t\t{loggedIn ? (watchlaterMedias && watchlaterMedias.length ? \r\n\t\t\t\t\t\t<InfiniteScroll \r\n\t\t\t\t\t\t\trefContainer={this.rootRef}\r\n\t\t\t\t\t\t\tcallback={this.listWatchlaterMedia}\r\n\t\t\t\t\t\t\tstop={noMoreItems}\r\n\t\t\t\t\t\t\trequested={itemsRequested} >\r\n\t\t\t\t\t\t\t\t<MediaTileHorizontal items={watchlaterMedias} \r\n\t\t\t\t\t\t\t\tisProcessing={itemsRequested}/>\r\n\t\t\t\t\t\t</InfiniteScroll> : \r\n\t\t\t\t\t<div> You didn't add anything to watch list </div>) : \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\tYou have to be logged in to view watchlist. \r\n\t\t\t\t\t<Link to=\"/signin\">Log in</Link>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item sm={3} className={classes.search}>\r\n\t\t\t\t<SearchForm \r\n\t\t\t\tchangeSearched={this.changeSearched}\r\n\t\t\t\tloggedIn={loggedIn} \r\n\t\t\t\titemsCount={watchlaterMedias && watchlaterMedias.length}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n\t}\r\n}\r\n\r\nconst boundActionCreators = (dispatch) =>bindActionCreators({...mediaOperations,...userOperations},dispatch);\r\nconst mappedStateToProps = (state) =>({\r\n  watchlaterMedias:selectMedias(state.media.medias,'watchlater'),\r\n  currentPage:selectCurrentPage(state.media.medias,'watchlater'),\r\n  pageSize:selectPageSize(state.media.medias,'watchlater'),\r\n  total:selectTotal(state.media.medias,'watchlater'),\r\n  itemsRequested:selectIsProcessing(state.media.medias,'watchlater'),\r\n  noMoreItems:noMoreItems(state.media.medias,'watchlater'),\r\n  loggedIn:userSelectors.selectIsAuthenticated(state.user),\r\n  isProcessing:userSelectors.selectIsProcessing(state.user),\r\n});\r\n\r\nexport default connect(mappedStateToProps,boundActionCreators)(withStyles(styles)(WatchLater));"],"mappings":"AAAA","sourceRoot":""}